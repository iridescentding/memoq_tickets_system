FROM python:3.10-slim

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app
ENV PIP_DEFAULT_TIMEOUT=100
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# 设置apt中科大镜像源
RUN echo "deb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware" > /etc/apt/sources.list \
    && echo "deb https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware" >> /etc/apt/sources.list \
    && echo "deb https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware" >> /etc/apt/sources.list \
    && echo "deb https://mirrors.ustc.edu.cn/debian-security/ bookworm-security main contrib non-free non-free-firmware" >> /etc/apt/sources.list

# 设置PyPI中科大镜像源
RUN echo '[global]\n\
index-url = https://mirrors.ustc.edu.cn/pypi/web/simple\n\
trusted-host = mirrors.ustc.edu.cn\n\
timeout = 120' > /etc/pip.conf

# 安装系统依赖
RUN apt-get update \
    && apt-get install -y --no-install-recommends gcc python3-dev libpq-dev curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 创建虚拟环境并激活
RUN python -m venv .venv
ENV PATH="/app/.venv/bin:$PATH"

# 使用pip安装uv包管理工具
RUN pip install --no-cache-dir uv

# 复制requirements.txt
COPY requirements.txt .

# 使用uv安装依赖，使用中科大镜像源
RUN uv pip install --no-cache-dir --index-url https://mirrors.ustc.edu.cn/pypi/web/simple -r requirements.txt \
    && uv pip install --no-cache-dir --index-url https://mirrors.ustc.edu.cn/pypi/web/simple watchdog django-extensions==3.2.3

# 创建媒体文件夹
RUN mkdir -p /app/media/attachments && chmod -R 755 /app/media

# 启动命令，使用django-extensions的runserver_plus以获得更好的调试体验
CMD ["./.venv/bin/python", "manage.py", "runserver_plus", "0.0.0.0:8000", "--threaded"]\
&& uv pip install --no-cache-dir --index-url https://mirrors.ustc.edu.cn/pypi/web/simple watchdog

# 暴露端口
EXPOSE 8000

# 启动命令在docker-compose.dev.yml中定义，以支持热重载