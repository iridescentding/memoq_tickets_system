# Generated by Django 4.0 on 2025-05-26 06:20

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('memoq_ticket_system', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanySSOProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_type', models.CharField(choices=[('feishu', '飞书'), ('enterprise_wechat', '企业微信'), ('wechat', '微信')], max_length=50, verbose_name='提供商类型')),
                ('is_enabled', models.BooleanField(default=False, verbose_name='是否启用')),
                ('app_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='App ID / Corp ID')),
                ('app_secret', models.CharField(blank=True, max_length=255, null=True, verbose_name='App Secret / Corp Secret')),
                ('agent_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Agent ID (企业微信/部分飞书应用)')),
                ('webhook_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='消息通知Webhook URL')),
                ('additional_config', models.JSONField(blank=True, default=dict, null=True, verbose_name='其他配置')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '公司SSO提供商配置',
                'verbose_name_plural': '公司SSO提供商配置',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='模板名称')),
                ('event_type', models.CharField(choices=[('ticket_created', '工单创建'), ('ticket_status_changed', '工单状态变更'), ('ticket_replied_by_support', '技术支持回复'), ('ticket_replied_by_customer', '客户回复'), ('ticket_assigned', '工单分配'), ('ticket_transferred', '工单转移'), ('ticket_paused', '工单暂停'), ('ticket_sla_ir_warning', 'SLA首次响应预警'), ('ticket_sla_ir_missed', 'SLA首次响应错过'), ('ticket_sla_resolution_warning', 'SLA解决预警'), ('ticket_sla_resolution_missed', 'SLA解决错过'), ('ticket_idle_warning', '工单闲置预警')], max_length=50, verbose_name='事件类型')),
                ('channel', models.CharField(choices=[('email', '邮件'), ('feishu', '飞书'), ('enterprise_wechat', '企业微信')], max_length=30, verbose_name='通知渠道')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('subject_template', models.CharField(max_length=255, verbose_name='主题/标题模板 (支持变量)')),
                ('body_template', models.TextField(verbose_name='内容模板 (支持变量，邮件可为HTML，Webhook为Markdown/JSON)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '通知模板',
                'verbose_name_plural': '通知模板',
            },
        ),
        migrations.CreateModel(
            name='TicketSatisfactionRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '很不满意'), (2, '不满意'), (3, '一般'), (4, '满意'), (5, '非常满意')], verbose_name='评分')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='评论')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='评价时间')),
            ],
            options={
                'verbose_name': '工单满意度评价',
                'verbose_name_plural': '工单满意度评价',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='emailtemplate',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='emailtemplate',
            name='company',
        ),
        migrations.AlterUniqueTogether(
            name='webhooktemplate',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='webhooktemplate',
            name='company',
        ),
        migrations.AlterModelOptions(
            name='companyconfig',
            options={'verbose_name': '公司配置 (SLA等)', 'verbose_name_plural': '公司配置 (SLA等)'},
        ),
        migrations.AlterModelOptions(
            name='notificationconfig',
            options={'verbose_name': '用户通知配置', 'verbose_name_plural': '用户通知配置'},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
            ],
        ),
        migrations.RemoveIndex(
            model_name='attachment',
            name='memoq_ticke_ticket__6ddf32_idx',
        ),
        migrations.RemoveIndex(
            model_name='attachment',
            name='memoq_ticke_reply_i_fe255e_idx',
        ),
        migrations.RemoveIndex(
            model_name='attachment',
            name='memoq_ticke_uploade_ee6d4b_idx',
        ),
        migrations.RemoveIndex(
            model_name='notificationlog',
            name='memoq_ticke_user_id_52a55b_idx',
        ),
        migrations.RemoveIndex(
            model_name='notificationlog',
            name='memoq_ticke_company_ee8bd7_idx',
        ),
        migrations.RemoveIndex(
            model_name='notificationlog',
            name='memoq_ticke_ticket__6f3a5b_idx',
        ),
        migrations.RemoveIndex(
            model_name='notificationlog',
            name='memoq_ticke_created_855475_idx',
        ),
        migrations.RemoveIndex(
            model_name='notificationlog',
            name='memoq_ticke_status_461af3_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticket',
            name='memoq_ticke_company_e0fe85_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticket',
            name='memoq_ticke_created_a32239_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticket',
            name='memoq_ticke_submitt_d1a582_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticket',
            name='memoq_ticke_assigne_424f88_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticket',
            name='memoq_ticke_status_71d9b0_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticket',
            name='memoq_ticke_last_ac_0ed84c_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticket',
            name='memoq_ticke_created_02ea8b_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticket',
            name='memoq_ticke_first_r_a9eb0a_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticket',
            name='memoq_ticke_ticket__eb2239_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticket',
            name='memoq_ticke_ticket__355c1e_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticketreply',
            name='memoq_ticke_ticket__2dfa6e_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticketreply',
            name='memoq_ticke_created_8d6b0c_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticketstatushistory',
            name='memoq_ticke_ticket__8a3b49_idx',
        ),
        migrations.RemoveIndex(
            model_name='ticketstatushistory',
            name='memoq_ticke_created_290c50_idx',
        ),
        migrations.RemoveIndex(
            model_name='tickettransferhistory',
            name='memoq_ticke_ticket__21fefe_idx',
        ),
        migrations.RemoveIndex(
            model_name='tickettransferhistory',
            name='memoq_ticke_created_143e4c_idx',
        ),
        migrations.RemoveField(
            model_name='company',
            name='sso_configs',
        ),
        migrations.RemoveField(
            model_name='notificationlog',
            name='content',
        ),
        migrations.AddField(
            model_name='company',
            name='default_sso_provider_type',
            field=models.CharField(blank=True, choices=[('feishu', '飞书'), ('enterprise_wechat', '企业微信'), ('wechat', '微信')], max_length=50, null=True, verbose_name='默认SSO提供商类型'),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='content_summary',
            field=models.TextField(default=django.utils.timezone.now, verbose_name='内容摘要/主题'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='recipient_info',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='接收者信息(如邮箱/Webhook URL)'),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='response_info',
            field=models.TextField(blank=True, null=True, verbose_name='发送响应信息'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='last_customer_reply_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='客户最后回复时间'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='last_support_reply_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='支持最后回复时间'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='sla_ir_deadline',
            field=models.DateTimeField(blank=True, null=True, verbose_name='SLA首次响应截止时间'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='sla_resolution_deadline',
            field=models.DateTimeField(blank=True, null=True, verbose_name='SLA解决截止时间'),
        ),
        migrations.AddField(
            model_name='user',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='软删除时间'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_deleted',
            field=models.BooleanField(default=False, verbose_name='已软删除'),
        ),
        migrations.AlterField(
            model_name='attachment',
            name='uploaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_attachments', to='memoq_ticket_system.user', verbose_name='上传人'),
        ),
        migrations.AlterField(
            model_name='company',
            name='email_config',
            field=models.JSONField(blank=True, default=dict, null=True, verbose_name='邮件系统配置 (SMTP)'),
        ),
        migrations.AlterField(
            model_name='company',
            name='login_background',
            field=models.ImageField(blank=True, null=True, upload_to='company_backgrounds/', verbose_name='登录页背景图'),
        ),
        migrations.AlterField(
            model_name='customertypetag',
            name='name',
            field=models.CharField(max_length=50, unique=True, verbose_name='名称'),
        ),
        migrations.AlterField(
            model_name='notificationlog',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_logs', to='memoq_ticket_system.company', verbose_name='公司'),
        ),
        migrations.AlterField(
            model_name='notificationlog',
            name='notification_type',
            field=models.CharField(choices=[('email', '邮箱'), ('wechat', '微信'), ('enterprise_wechat', '企业微信'), ('feishu', '飞书'), ('webhook', 'Webhook通用')], max_length=30, verbose_name='通知类型'),
        ),
        migrations.AlterField(
            model_name='notificationlog',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_logs', to='memoq_ticket_system.ticket', verbose_name='工单'),
        ),
        migrations.AlterField(
            model_name='notificationlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications_triggered_log', to='memoq_ticket_system.user', verbose_name='触发用户'),
        ),
        migrations.AlterField(
            model_name='ticket',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='ticket',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tickets', to='memoq_ticket_system.user', verbose_name='创建人'),
        ),
        migrations.AlterField(
            model_name='ticket',
            name='first_replied_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='首次回复时间'),
        ),
        migrations.AlterField(
            model_name='ticket',
            name='last_activity_at',
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='最后活动时间'),
        ),
        migrations.AlterField(
            model_name='ticket',
            name='status',
            field=models.CharField(choices=[('new_issue', '新问题'), ('pending_assignment', '待分配'), ('in_progress', '处理中'), ('waiting_for_customer', '等待客户回复'), ('resolved', '已解决'), ('closed', '已关闭'), ('customer_follow_up', '追问'), ('paused', '暂停')], db_index=True, default='new_issue', max_length=30, verbose_name='状态'),
        ),
        migrations.AlterField(
            model_name='ticketreply',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_replies', to='memoq_ticket_system.user', verbose_name='回复人'),
        ),
        migrations.AlterField(
            model_name='ticketstatushistory',
            name='changed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_changes', to='memoq_ticket_system.user', verbose_name='变更人'),
        ),
        migrations.AlterField(
            model_name='tickettransferhistory',
            name='transferred_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transferred_tickets_initiated', to='memoq_ticket_system.user', verbose_name='转移发起人'),
        ),
        migrations.AlterField(
            model_name='tickettransferhistory',
            name='transferred_from',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_from_user', to='memoq_ticket_system.user', verbose_name='原负责人'),
        ),
        migrations.AlterField(
            model_name='tickettransferhistory',
            name='transferred_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfers_to_user', to='memoq_ticket_system.user', verbose_name='新负责人'),
        ),
        migrations.AlterField(
            model_name='tickettype',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_ticket_types', to='memoq_ticket_system.user', verbose_name='创建人'),
        ),
        migrations.AlterField(
            model_name='user',
            name='enterprise_wechat_id',
            field=models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='企业微信ID'),
        ),
        migrations.AlterField(
            model_name='user',
            name='feishu_id',
            field=models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='飞书ID'),
        ),
        migrations.AlterField(
            model_name='user',
            name='wechat_id',
            field=models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='微信ID'),
        ),
        migrations.DeleteModel(
            name='EmailTemplate',
        ),
        migrations.DeleteModel(
            name='WebhookTemplate',
        ),
        migrations.AddField(
            model_name='ticketsatisfactionrating',
            name='rated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='memoq_ticket_system.user', verbose_name='评价人 (客户)'),
        ),
        migrations.AddField(
            model_name='ticketsatisfactionrating',
            name='ticket',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='satisfaction_rating', to='memoq_ticket_system.ticket', verbose_name='工单'),
        ),
        migrations.AddField(
            model_name='notificationtemplate',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_templates', to='memoq_ticket_system.company', verbose_name='所属公司 (可选,全局则为空)'),
        ),
        migrations.AddField(
            model_name='companyssoprovider',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sso_providers', to='memoq_ticket_system.company', verbose_name='公司'),
        ),
        migrations.AlterUniqueTogether(
            name='companyssoprovider',
            unique_together={('company', 'provider_type')},
        ),
    ]
